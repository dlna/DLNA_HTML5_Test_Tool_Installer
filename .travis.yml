language: bash

sudo: required

services:
  - docker

env:
    - HTT_OS_VERSION=14.04
      HTT_VERSIONS="Release_2014.09.31"
    - HTT_OS_VERSION=14.04
      HTT_VERSIONS="Release_2014.09.31 Release_2016.03.11_Alpha"
    - HTT_OS_VERSION=14.04
      HTT_VERSIONS="Release_2014.09.31 master"
    - HTT_OS_VERSION=14.04
      HTT_VERSIONS="Release_2014.09.31 Release_2016.03.11_Alpha master"
    - HTT_OS_VERSION=14.04
      HTT_VERSIONS="Release_2016.03.11_Alpha"
    - HTT_OS_VERSION=14.04
      HTT_VERSIONS="Release_2016.03.11_Alpha master"
    - HTT_OS_VERSION=14.04
      HTT_VERSIONS="master"
    - HTT_OS_VERSION=16.04
      HTT_VERSIONS="Release_2014.09.31"
    - HTT_OS_VERSION=16.04
      HTT_VERSIONS="Release_2014.09.31 Release_2016.03.11_Alpha"
    - HTT_OS_VERSION=16.04
      HTT_VERSIONS="Release_2014.09.31 master"
    - HTT_OS_VERSION=16.04
      HTT_VERSIONS="Release_2014.09.31 Release_2016.03.11_Alpha master"
    - HTT_OS_VERSION=16.04
      HTT_VERSIONS="Release_2016.03.11_Alpha"
    - HTT_OS_VERSION=16.04
      HTT_VERSIONS="Release_2016.03.11_Alpha master"
    - HTT_OS_VERSION=16.04
      HTT_VERSIONS="master"

install:
    - docker pull ubuntu:14.04
    - docker pull ubuntu:16.04
    - wget https://github.com/jpetazzo/pipework/raw/master/pipework
    - chmod +x pipework
    - sudo mv pipework /usr/local/bin
    - sudo apt-get update
    - sudo apt-get install arping

script:
    - INSTALL=$(docker run -dit ubuntu:${HTT_OS_VERSION} /bin/bash)
    # Updates needed for Docker, needs to be manually setup the network
    - sudo pipework br0 ${INSTALL} 192.168.0.1/24
    - docker exec ${INSTALL} sh -c 'echo "192.168.0.1   web-platform.test" >> /etc/hosts'
    - docker exec ${INSTALL} sh -c 'echo "192.168.0.1   www.web-platform.test" >> /etc/hosts'
    - docker exec ${INSTALL} sh -c 'echo "192.168.0.1   www1.web-platform.test" >> /etc/hosts'
    - docker exec ${INSTALL} sh -c 'echo "192.168.0.1   www2.web-platform.test" >> /etc/hosts'
    - docker exec ${INSTALL} sh -c 'echo "192.168.0.1   xn--n8j6ds53lwwkrqhv28a.web-platform.test" >> /etc/hosts'
    - docker exec ${INSTALL} sh -c 'echo "192.168.0.1   xn--lve-6lad.web-platform.test" >> /etc/hosts'
    - docker exec ${INSTALL} sh -c 'echo "0.0.0.0       nonexistent-origin.web-platform.test" >> /etc/hosts'
    # Run the test script in the Docker container
    - docker cp DLNA_HTML5_Test_Tool_Installer.sh ${INSTALL}:/root/DLNA_HTML5_Test_Tool_Installer.sh
    - for HTT_VERSION in ${HTT_VERSIONS}; do 
        docker exec ${INSTALL} bash /root/DLNA_HTML5_Test_Tool_Installer.sh --disable-network -y -r ${HTT_VERSION} || exit $?; 
      done
    # Test that things are up and running
    - TEST=$(docker run -dit ubuntu:16.04 /bin/bash)
    - docker exec ${TEST} apt-get -y update
    - docker exec ${TEST} apt-get -y install host net-tools curl isc-dhcp-client
    - sudo bash pipework br0 -i eth1 ${TEST} dhclient
    # On Travis the WPT DNS server gets stuck on the end, replace with just the WPT DNS server once know it
    # was correctly setup
    - docker exec -it ${TEST} cat /etc/resolv.conf | tee resolv.conf | grep 192.168.0.1
    - cat resolv.conf
    - docker exec ${TEST} sh -c 'echo "nameserver 192.168.0.1" > /etc/resolv.conf'
    - docker cp Validate_Install.sh ${TEST}:/root/Validate_Install.sh
    - docker exec ${TEST} bash /root/Validate_Install.sh
